/*===========================================================
文件名称：JY901_uart.c

修改人：QH

修改日期：2017/5/11

引脚设置：使用串口3中断

使用说明：使用时将JY901_uart.c,JY901_uart.h共同添加进工程
					需要初始化串口3，使能串口3中断
					需要配置串口3中断优先级，建议优先级较高
					周期大概5ms，实际串口周期和读取时间未测
					无需外部调用此文件的函数
		
===========================================================*/

#include "JY901_uart.h"
#include "include.h"

#include "wind.h"

XYZ_Typedef acc;//加速度
XYZ_Typedef gryo;//角速度
XYZ_Typedef magnetic;//磁场	-->未读取
float pitch;
float roll;
float yaw;


void ShortToChar(short sData,unsigned char cData[])
{
	cData[0]=sData&0xff;
	cData[1]=sData>>8;
}

short CharToShort(unsigned char cData[])
{
	return ((short)cData[1]<<8)|cData[0];
}

//CopeSerialData为串口3中断调用函数，串口每收到一个数据，调用一次这个函数。
void CopeSerial2Data(unsigned char ucData)
{
	static unsigned char ucRxBuffer[250];
	static unsigned char ucRxCnt = 0;	
	
	ucRxBuffer[ucRxCnt++]=ucData;
	if (ucRxBuffer[0]!=0x55) //数据头不对，则重新开始寻找0x55数据头
	{
		ucRxCnt=0;
		return;
	}
	if (ucRxCnt<11) {return;}//数据不满11个，则返回
	else
	{
		switch(ucRxBuffer[1])
		{
		  //加速度
			case 0x51:	
			{
					acc.x=(float)CharToShort(&ucRxBuffer[2])/32768*16*9.8;
					acc.y=(float)CharToShort(&ucRxBuffer[4])/32768*16*9.8;
					acc.z=(float)CharToShort(&ucRxBuffer[6])/32768*16*9.8;
					break;
			}
			
			//角速度
			case 0x52:	
			{
					gryo.x=(float)CharToShort(&ucRxBuffer[2])/32768*500;
					gryo.y=(float)CharToShort(&ucRxBuffer[4])/32768*500;
					gryo.z=(float)CharToShort(&ucRxBuffer[6])/32768*500;
					break;
			}
			//角度
			case 0x53:	
			{
				roll=  (float)CharToShort(&ucRxBuffer[2])/32768*180;
				pitch= (float)CharToShort(&ucRxBuffer[4])/32768*180;
				yaw=   (float)CharToShort(&ucRxBuffer[6])/32768*180;
				break;
			}
		}
		ucRxCnt=0;
	}
}

void USART3_IRQHandler(void)
{
	 if(USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)
  {
		CopeSerial2Data((unsigned char)USART3->DR);//处理数据		
   }
	
	 //矫正
	 pitch-=wind.Angle_x_init;
	 roll-=wind.Angle_y_init;
	 
}

